@page "/registrar-cliente"
@inject SSC_Gimnasio.Repositorios.IRepositorioClientes RepositorioClientes
@using SSC_Gimnasio.Modelos
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3 class="text-center my-4">Registro de Nuevo Cliente</h3>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <EditForm EditContext="@editContext" OnValidSubmit="@RegistrarCliente" FormName="nuevoClienteForm">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group mb-3">
                    <label for="nombre" class="form-label">Nombre</label>
                    <InputText id="nombre" class="form-control" @bind-Value="cliente.Nombre" />
                    <ValidationMessage For="@(() => cliente.Nombre)" class="text-danger" />
                </div>

                <div class="form-group mb-3">
                    <label for="correo" class="form-label">Correo</label>
                    <InputText id="correo" type="email" class="form-control" @bind-Value="cliente.Email" />
                    <ValidationMessage For="@(() => cliente.Email)" class="text-danger" />
                </div>

                <div class="form-group mb-3">
                    <label for="telefono" class="form-label">Teléfono</label>
                    <InputText id="telefono" class="form-control" @bind-Value="cliente.Telefono" />
                    <ValidationMessage For="@(() => cliente.Telefono)" class="text-danger" />
                </div>

                <div class="form-group mb-4">
                    <label for="telefonoEmergencia" class="form-label">Teléfono de Emergencia</label>
                    <InputText id="telefonoEmergencia" class="form-control" @bind-Value="cliente.Telefono_Emergencia" />
                    <ValidationMessage For="@(() => cliente.Telefono_Emergencia)" class="text-danger" />
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-primary">Registrar Cliente</button>
                </div>
            </EditForm>

            @if (!string.IsNullOrEmpty(mensaje))
            {
                <div class="alert alert-success mt-3">@mensaje</div>
            }

            @if (!string.IsNullOrEmpty(error))
            {
                <div class="alert alert-danger mt-3">@error</div>
            }
        </div>
    </div>
</div>

@code {
    private Clientes cliente = new Clientes();
    private EditContext editContext; 
    private string mensaje;
    private string error;

    protected override void OnInitialized()
    {
        editContext = new EditContext(cliente); 
    }

    private async Task RegistrarCliente()
    {
        try
        {
            await RepositorioClientes.Add(cliente); 
            mensaje = "Cliente registrado exitosamente.";
            await Task.Delay(2500); 
            Navigation.NavigateTo("/renovacion");
        }
        catch (Exception ex)
        {
            error = $"Error al registrar el cliente: {ex.Message}";
        }
    }
}