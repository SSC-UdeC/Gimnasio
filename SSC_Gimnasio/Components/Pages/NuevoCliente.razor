@page "/NuevoCliente"
@using SSC_Gimnasio.Modelos
@inject SSC_Gimnasio.Repositorios.IRepositorioClientes repositorioClientes

<h3 class="text-center my-4">Registro de Nuevo Cliente</h3>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <EditForm Model="@cliente" OnValidSubmit="@RegistrarCliente">
                <div class="form-group mb-3">
                    <label for="nombre" class="form-label">Nombre</label>
                    <InputText id="nombre" class="form-control" @bind-Value="cliente.Nombre" />
                </div>

                <div class="form-group mb-3">
                    <label for="correo" class="form-label">Correo</label>
                    <InputText id="correo" type="email" class="form-control" @bind-Value="cliente.Email" />
                </div>

                <div class="form-group mb-3">
                    <label for="telefono" class="form-label">Teléfono</label>
                    <InputText id="telefono" class="form-control" @bind-Value="cliente.Telefono" />
                </div>

                <div class="form-group mb-4">
                    <label for="telefonoEmergencia" class="form-label">Teléfono de Emergencia</label>
                    <InputText id="telefonoEmergencia" class="form-control" @bind-Value="cliente.Telefono_Emergencia" />
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-primary">Registrar Cliente</button>
                </div>
            </EditForm>

            @if (!string.IsNullOrEmpty(mensaje))
            {
                <div class="alert alert-success mt-3">@mensaje</div>
            }

            @if (!string.IsNullOrEmpty(error))
            {
                <div class="alert alert-danger mt-3">@error</div>
            }
        </div>
    </div>
</div>

@code {
    private Clientes cliente = new Clientes();
    private string? mensaje;
    private string? error;

    private async Task RegistrarCliente()
    {
        try
        {
            var clienteGuardado = await repositorioClientes.Add(cliente);
            mensaje = $"Cliente registrado exitosamente. ID: {clienteGuardado.Id_Cliente}";
            cliente = new Clientes(); // Limpiar el modelo para el nuevo registro
        }
        catch (Exception ex)
        {
            error = $"Error al registrar el cliente: {ex.Message}";
        }
    }
}
