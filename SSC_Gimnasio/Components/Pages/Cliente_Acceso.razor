@page "/"
@using SSC_Gimnasio.Modelos
@inject SSC_Gimnasio.Repositorios.IRepositorioClientes RepositorioClientes
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<h3 class="text-center my-4">Detalles del Cliente</h3>

<button class="btn btn-primary" type="button" @onclick="(() => ShowScanBarcode = !ShowScanBarcode)">
    Escanear Código
</button>

@if (ShowScanBarcode)
{
    <BarcodeReader ScanResult="HandleScanResult"
                   Close="(() => ShowScanBarcode = !ShowScanBarcode)"
                   ScanBtnTitle="Escanear"
                   ResetBtnTitle="Reset"
                   CloseBtnTitle="Cerrar" />
}

@if (cliente != null)
{
    <h4>@cliente.Nombre</h4>
    <p><strong>Correo:</strong> @cliente.Email</p>
    <p><strong>Teléfono:</strong> @cliente.Telefono</p>
    <p><strong>Expiración de Membresía:</strong> @cliente.Fecha_Vencimiento.ToString("dd/MM/yyyy")</p>
}

@if (error != null)
{
    <p class="text-danger">@error</p>
}

@if (resultado != null)
{
    <p class="mt-3"><strong>Resultado del Escaneo:</strong> @resultado</p>
}

@code {
    bool ShowScanBarcode { get; set; } = false;
    private Clientes? cliente;
    private string? error;
    private string? resultado;

    private async Task HandleScanResult(string scannedCode)
    {
        if (int.TryParse(scannedCode, out int clientId))
        {
            cliente = await RepositorioClientes.Get(clientId);
            error = null; 
        }
        else
        {
            error = "Código inválido.";
            cliente = null; 
            resultado = null; 
        }
    }
}
