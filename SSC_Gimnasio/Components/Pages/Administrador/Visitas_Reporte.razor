@page "/reporte-visitas"
@using SSC_Gimnasio.Modelos
@using System.IO
@rendermode InteractiveServer
@using iTextSharp.text
@using iTextSharp.text.pdf
@inject SSC_Gimnasio.Repositorios.IRepositorioVisitas RepositorioVisitas
@inject IJSRuntime JSRuntime

<h3 class="text-center mt-3">Reporte de Visitas al Gimnasio</h3>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-5">
            <label for="fechaInicio" class="form-label">Fecha de inicio:</label>
            <input type="date" id="fechaInicio" class="form-control" @bind="fechaInicio">
        </div>
        <div class="col-md-5">
            <label for="fechaFin" class="form-label">Fecha de fin:</label>
            <input type="date" id="fechaFin" class="form-control" @bind="fechaFin">
        </div>
        <div class="col-md-2 d-flex align-items-end">
            <button class="btn btn-primary w-100" @onclick="CargarReporte">Generar Reporte</button>
        </div>
    </div>

    @if (visitas.Count > 0)
    {
        <table class="table table-bordered mt-4">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>Cliente</th>
                    <th>Fecha de Visita</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var visita in visitas)
                {
                    <tr>
                        <td>@visita.Id_Visita</td>
                        <td>@(visita.Cliente?.Nombre ?? "Desconocido")</td>
                        <td>@visita.Fecha_Visita.ToString("dd/MM/yyyy HH:mm")</td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="text-end mt-3">
            <h5><strong>Total de visitas en el período: @visitas.Count</strong></h5>
            <button class="btn btn-danger mt-2" @onclick="DescargarPDF">📥 Descargar PDF</button>
        </div>
    }
    else if (reporteGenerado)
    {
        <p class="text-danger mt-3">No se encontraron visitas en el rango seleccionado.</p>
    }
</div>

@code {
    private DateTime fechaInicio = DateTime.Today;
    private DateTime fechaFin = DateTime.Today;
    private List<Visitas> visitas = new();
    private bool reporteGenerado = false;

    private async Task CargarReporte()
    {
        if (fechaInicio > fechaFin)
        {
            visitas.Clear();
            reporteGenerado = false;
            return;
        }

        var todasLasVisitas = await RepositorioVisitas.GetAll();
        visitas = todasLasVisitas
            .Where(v => v.Fecha_Visita.Date >= fechaInicio.Date && v.Fecha_Visita.Date <= fechaFin.Date)
            .ToList();

        reporteGenerado = true;
    }

    private async Task DescargarPDF()
    {
        using (MemoryStream ms = new MemoryStream())
        {
            Document document = new Document(PageSize.A4, 10, 10, 10, 10);
            PdfWriter writer = PdfWriter.GetInstance(document, ms);
            document.Open();

            Font titleFont = FontFactory.GetFont(FontFactory.HELVETICA_BOLD, 16);
            Paragraph title = new Paragraph("Reporte de Visitas al Gimnasio", titleFont)
                {
                    Alignment = Element.ALIGN_CENTER
                };
            document.Add(title);
            document.Add(new Paragraph($"Período: {fechaInicio:dd/MM/yyyy} - {fechaFin:dd/MM/yyyy}\n\n"));

            // Tabla
            PdfPTable table = new PdfPTable(3) { WidthPercentage = 100 };
            table.SetWidths(new float[] { 1, 3, 2 });

            table.AddCell(new PdfPCell(new Phrase("Cliente")) { BackgroundColor = BaseColor.LIGHT_GRAY });
            table.AddCell(new PdfPCell(new Phrase("Fecha de Visita")) { BackgroundColor = BaseColor.LIGHT_GRAY });

            foreach (var visita in visitas)
            {
                table.AddCell(visita.Id_Visita.ToString());
                table.AddCell(visita.Cliente?.Nombre ?? "Desconocido");
                table.AddCell(visita.Fecha_Visita.ToString("dd/MM/yyyy HH:mm"));
            }

            document.Add(table);

            document.Add(new Paragraph($"\nTotal de visitas en el período: {visitas.Count}"));

            document.Close();
            writer.Close();

            
            var byteArray = ms.ToArray();
            var base64 = Convert.ToBase64String(byteArray);
            var fileName = $"Reporte_Visitas_{fechaInicio:ddMMyyyy}_{fechaFin:ddMMyyyy}.pdf";

            await JSRuntime.InvokeVoidAsync("downloadFile", fileName, "application/pdf", base64);
        }
    }
}
